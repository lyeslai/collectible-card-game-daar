{
    "contractName": "Collection",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_collectionName",
                    "type": "string"
                },
                {
                    "internalType": "int256",
                    "name": "_cardCount",
                    "type": "int256"
                },
                {
                    "internalType": "string",
                    "name": "_baseTokenURI",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC721IncorrectOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ERC721InsufficientApproval",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidOperator",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ERC721NonexistentToken",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "baseTokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cardCount",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "nextTokenId",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_collectionName\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"_cardCount\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cardCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol\":\"Collection\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol\":{\"keccak256\":\"0x0843a64819258b72d2704708087722df2d1fa17c370f9cb89a8b215c8a3e886e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e5cf32a2f5acfa3df2bd6d53bcb967829b4b8aab13e77344199388fe320c82\",\"dweb:/ipfs/QmdV5LEPrx5W2KtoLLov1kcS4YcwUAhEqGLsifYqa2FF9k\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "317:1008:12:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;317:1008:12;;;;;;;;;-1:-1:-1;;;;;317:1008:12;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;689:10;1273:26:0;1269:95;;3004:6;317:1008:12;;689:10;-1:-1:-1;;;;;;317:1008:12;;;;;;;-1:-1:-1;;;;;317:1008:12;3052:40:0;-1:-1:-1;;3052:40:0;753:22:12;317:1008;;;-1:-1:-1;;;;;317:1008:12;;;;785:28;317:1008;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;785:28;317:1008;;;823:15;317:1008;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;785:28;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;785:28;317:1008;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:28;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;-1:-1:-1;317:1008:12;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;-1:-1:-1;317:1008:12;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;317:1008:12;;;-1:-1:-1;1322:31:0;317:1008:12;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;-1:-1:-1;317:1008:12;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;-1:-1:-1;;317:1008:12;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;-1:-1:-1;;317:1008:12;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;:::o",
    "deployedSourceMap": "317:1008:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;317:1008:12;2627:22:0;;2623:91;;3004:6;317:1008:12;;-1:-1:-1;;;;;;317:1008:12;;;;;;;-1:-1:-1;;;;;317:1008:12;3052:40:0;-1:-1:-1;;3052:40:0;317:1008:12;2623:91:0;2672:31;;;317:1008:12;2672:31:0;317:1008:12;;;;;2672:31:0;317:1008:12;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;4039:18:2;317:1008:12;;;;;4039:35:2;317:1008:12;;;;;;-1:-1:-1;317:1008:12;;;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;;420:26;317:1008;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;420:26;317:1008;;;;;;;-1:-1:-1;317:1008:12;;;;;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;;;-1:-1:-1;;;12342:17:10;;;12338:103;;317:1008:12;12458:17:10;12467:8;13038:7;12458:17;;;12454:103;;317:1008:12;12583:8:10;12574:17;;;12570:103;;317:1008:12;12699:7:10;12690:16;;;12686:100;;317:1008:12;12812:7:10;12803:16;;;12799:100;;317:1008:12;12925:7:10;12916:16;;;12912:100;;317:1008:12;13029:16:10;;13025:66;;317:1008:12;;;;;13038:7:10;921:76:7;317:1008:12;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;317:1008:12;;;;921:76:7;;;1010:282;-1:-1:-1;;317:1008:12;;-1:-1:-1;;;1115:95:7;;;;317:1008:12;1115:95:7;317:1008:12;1260:10:7;;1256:21;;13038:7:10;1010:282:7;;;;1256:21;1272:5;;317:1008:12;;;;;1275:12;317:1008;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1258:57;317:1008;;;;;;;;;;;;1258:57;317:1008;;1258:57;;;;;;:::i;317:1008::-;;;;1275:12;317:1008;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;1258:57;;;317:1008;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;13025:66:10;317:1008:12;;;13025:66:10;;;12912:100;12925:7;12996:1;317:1008:12;;;;12912:100:10;;;12799;12812:7;317:1008:12;;;;;12799:100:10;;;12686;12699:7;12770:1;317:1008:12;;;;12686:100:10;;;12570:103;12583:8;12656:2;317:1008:12;;;;12570:103:10;;;12454;12467:8;317:1008:12;;;;;12454:103:10;;;12338;-1:-1:-1;317:1008:12;;-1:-1:-1;;;;317:1008:12;;12338:103:10;;317:1008:12;;;;;;-1:-1:-1;;317:1008:12;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5181:4:2;317:1008:12;;;;;;;;;;5121:7:2;;;;;:::i;:::-;5181:4;:::i;:::-;317:1008:12;;;;;;;-1:-1:-1;;317:1008:12;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;317:1008:12;;15698:22:2;;15694:91;;735:10:6;317:1008:12;;15794:18:2;317:1008:12;;;;;;-1:-1:-1;317:1008:12;;;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;15855:41:2;317:1008:12;735:10:6;15855:41:2;;317:1008:12;15694:91:2;15743:31;;;;317:1008:12;15743:31:2;317:1008:12;;;;15743:31:2;317:1008:12;;;;;;-1:-1:-1;;317:1008:12;;;;;;;2597:7:2;317:1008:12;;;;:::i;:::-;;;;;2597:7:2;317:1008:12;;;2597:7:2;;;;317:1008:12;;;;;;;;;;;;;:::i;:::-;2597:7:2;317:1008:12;;;;;;;-1:-1:-1;317:1008:12;;;;;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;;;2597:7:2;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;1710:6:0;317:1008:12;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;388:26;317:1008;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;1500:62:0;;:::i;:::-;3004:6;317:1008:12;;-1:-1:-1;;;;;;317:1008:12;;;;;;;-1:-1:-1;;;;;317:1008:12;3052:40:0;317:1008:12;;3052:40:0;317:1008:12;;;;;;;-1:-1:-1;;317:1008:12;;;;-1:-1:-1;;;;;317:1008:12;;:::i;:::-;;2006:19:2;;2002:87;;317:1008:12;;2105:9:2;317:1008:12;;;;;;;;;;;;;2002:87:2;2048:30;;;317:1008:12;2048:30:2;317:1008:12;;;;;2048:30:2;317:1008:12;;;;;;-1:-1:-1;;317:1008:12;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;988:11:12;317:1008;1011:9;317:1008;988:33;;317:1008;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;317:1008:12;;;10022:16:2;;10018:87;;317:1008:12;;;;5799:7:2;317:1008:12;;;;;;-1:-1:-1;;;;;317:1008:12;9161:18:2;;;;;9157:256;;317:1008:12;;;;9487:9:2;317:1008:12;;;;;9035:18:2;317:1008:12;;;;;;;;5799:7:2;317:1008:12;;;;;;;;;;;;;;;9577:27:2;;;;317:1008:12;9577:27:2;;10180:96;;;17034:14;17030:664;;317:1008:12;;;;;988:11;317:1008;;;;;;;9035:18:2;317:1008:12;988:11;317:1008;;;;;;;;;;;;;;17030:664:2;317:1008:12;;;;;;;;;;;;;;17072:71:2;;735:10:6;317:1008:12;17072:71:2;;317:1008:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:2;;317:1008:12;17072:71:2;;;317:1008:12;;17072:71:2;;;17030:664;-1:-1:-1;17068:616:2;;-1:-1:-1;317:1008:12;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;17381:18:2;;;10061:33;;;;317:1008:12;17430:25:2;317:1008:12;;;;17430:25:2;17377:293;17557:95;;317:1008:12;;;;17068:616:2;-1:-1:-1;;;;;;317:1008:12;-1:-1:-1;;;17190:51:2;;-1:-1:-1;17186:130:2;;17068:616;17030:664;;;;;;17186:130;10061:33;;;317:1008:12;17272:25:2;317:1008:12;;;;17272:25:2;17072:71;;;;;;;;;;;;;;;;;:::i;:::-;;;317:1008:12;;;;;-1:-1:-1;;;;;;317:1008:12;;;;;;17072:71:2;;;;;;;;;10180:96;10234:31;;;317:1008:12;10234:31:2;317:1008:12;;;;;10234:31:2;9157:256;317:1008:12;;;;15346:15:2;317:1008:12;;;;;;;;-1:-1:-1;;;;;;317:1008:12;;;;;;9368:9:2;317:1008:12;;;;;;-1:-1:-1;;317:1008:12;;;9157:256:2;;10018:87;10061:33;;;317:1008:12;10061:33:2;317:1008:12;;;;;10061:33:2;317:1008:12;;;-1:-1:-1;;;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;2274:22:2;317:1008:12;;2274:22:2;:::i;:::-;317:1008:12;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;5181:4:2;317:1008:12;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;5121:7:2;;;;;:::i;317:1008:12:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;317:1008:12;;;;;362:20;317:1008;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;:::i;:::-;;;14943:22:2;;;:::i;:::-;735:10:6;15093:18:2;;:35;;;317:1008:12;15093:69:2;;;317:1008:12;15089:142:2;;317:1008:12;;-1:-1:-1;;;;;317:1008:12;;;;;15283:28:2;317:1008:12;;15283:28:2;317:1008:12;;;;;;;;;;;;-1:-1:-1;;;;;;317:1008:12;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;15089:142:2;15189:27;;;317:1008:12;15189:27:2;735:10:6;317:1008:12;;;;15189:27:2;15093:69;-1:-1:-1;;;;;;317:1008:12;;;;;;4039:18:2;317:1008:12;;;;;;;;735:10:6;317:1008:12;;;;;;;;;;15132:30:2;15093:69;;:35;-1:-1:-1;;;;;;317:1008:12;;735:10:6;15115:13:2;;15093:35;;317:1008:12;;;;;;-1:-1:-1;;317:1008:12;;;;;;3583:22:2;;;:::i;:::-;;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;-1:-1:-1;317:1008:12;;-1:-1:-1;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;317:1008:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1698:40:2;;;:104;;;;317:1008:12;1698:156:2;;;;317:1008:12;;;;;;;1698:156:2;-1:-1:-1;;;861:40:8;;-1:-1:-1;1698:156:2;;;:104;-1:-1:-1;;;1754:48:2;;;-1:-1:-1;1698:104:2;;317:1008:12;;;;;;;;;;;;;;;;;-1:-1:-1;317:1008:12;;;;;;;;-1:-1:-1;;317:1008:12;;;;:::o;:::-;;;;-1:-1:-1;;;;;317:1008:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;317:1008:12;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;317:1008:12;;;;;-1:-1:-1;317:1008:12;;;;;;;;;-1:-1:-1;;317:1008:12;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;4143:578:2;-1:-1:-1;;;;;317:1008:12;;;;4143:578:2;4237:16;;4233:87;;4251:1;317:1008:12;;;5799:7:2;317:1008:12;;;;;;-1:-1:-1;;;;;317:1008:12;;;;735:10:6;9035:18:2;;;9031:86;;4143:578;9161:18;;9157:256;;4143:578;317:1008:12;4251:1:2;317:1008:12;9487:9:2;317:1008:12;;;4251:1:2;317:1008:12;9427:16:2;317:1008:12;;;;;;4251:1:2;317:1008:12;5799:7:2;317:1008:12;;;4251:1:2;317:1008:12;;;;;;;;;;;9577:27:2;;4251:1;9577:27;;-1:-1:-1;;;;;317:1008:12;4610:21:2;;;4606:109;;4143:578;;;:::o;4606:109::-;4654:50;;;4251:1;4654:50;;317:1008:12;;;;;;4251:1:2;4654:50;9157:256;317:1008:12;;;;15346:15:2;317:1008:12;;;;;;;-1:-1:-1;;;;;;317:1008:12;;;;4251:1:2;317:1008:12;9368:9:2;317:1008:12;;;4251:1:2;317:1008:12;;;;;;;;9157:256:2;;9031:86;6514:127;;-1:-1:-1;6514:127:2;;;9031:86;7193:39;7189:255;;9031:86;;;;;7189:255;7252:19;;317:1008:12;;7298:31:2;;;4251:1;7298:31;;317:1008:12;;4251:1:2;7298:31;7248:186;7375:44;;;4251:1;7375:44;735:10:6;7375:44:2;317:1008:12;;;;4251:1:2;7375:44;6514:127;735:10:6;;6552:16:2;;:52;;;;6514:127;6552:88;6514:127;6552:88;-1:-1:-1;4251:1:2;317:1008:12;;;6034:15:2;317:1008:12;;;;;;-1:-1:-1;;;;;317:1008:12;735:10:6;6608:32:2;6514:127;;6552:52;-1:-1:-1;4251:1:2;317:1008:12;;;4039:18:2;317:1008:12;;;;;;;;735:10:6;317:1008:12;;;;;;;;;;6552:52:2;;16138:241;-1:-1:-1;317:1008:12;;;5799:7:2;317:1008:12;;;;;;-1:-1:-1;;;;;317:1008:12;;16267:19:2;;16263:88;;16360:12;16138:241;:::o;16263:88::-;7298:31;;;-1:-1:-1;16309:31:2;;317:1008:12;;-1:-1:-1;16309:31:2;1796:162:0;1710:6;317:1008:12;-1:-1:-1;;;;;317:1008:12;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:6;1901:40:0;317:1008:12;;-1:-1:-1;1901:40:0;16918:782:2;;;17034:14;;17030:664;;16918:782;;;;;:::o;17030:664::-;317:1008:12;;-1:-1:-1;;;17072:71:2;;735:10:6;17072:71:2;;;317:1008:12;-1:-1:-1;;;;;317:1008:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:2;;17051:1;17072:71;;;17051:1;;17072:71;;;17030:664;-1:-1:-1;17068:616:2;;-1:-1:-1;317:1008:12;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;17051:1:2;317:1008:12;;;;;;;;17381:18:2;;;10061:33;;;;17051:1;17430:25;17072:71;317:1008:12;;17051:1:2;17430:25;17377:293;317:1008:12;17557:95:2;;317:1008:12;;;;17068:616:2;-1:-1:-1;;;;;;317:1008:12;-1:-1:-1;;;17190:51:2;17186:130;;17068:616;17030:664;;;;;;17072:71;;;;317:1008:12;17072:71:2;;317:1008:12;17072:71:2;;;;;;317:1008:12;17072:71:2;;;:::i;:::-;;;317:1008:12;;;;;-1:-1:-1;;;;;;317:1008:12;;;;;;17072:71:2;;;;;;;-1:-1:-1;17072:71:2;",
    "sourcePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.28+commit.7893614a"
    },
    "ast": {
        "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol",
        "exportedSymbols": {
            "Collection": [
                3020
            ],
            "Context": [
                1478
            ],
            "ERC165": [
                1757
            ],
            "ERC721": [
                1293
            ],
            "IERC165": [
                1769
            ],
            "IERC721": [
                1410
            ],
            "IERC721Errors": [
                237
            ],
            "IERC721Metadata": [
                1456
            ],
            "IERC721Receiver": [
                1428
            ],
            "Ownable": [
                147
            ],
            "Strings": [
                1733
            ]
        },
        "id": 3021,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 2930,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:12"
            },
            {
                "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 2931,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 3021,
                "sourceUnit": 1294,
                "src": "57:131:12",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 2932,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 3021,
                "sourceUnit": 148,
                "src": "189:126:12",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 2933,
                            "name": "ERC721",
                            "nameLocations": [
                                "340:6:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1293,
                            "src": "340:6:12"
                        },
                        "id": 2934,
                        "nodeType": "InheritanceSpecifier",
                        "src": "340:6:12"
                    },
                    {
                        "baseName": {
                            "id": 2935,
                            "name": "Ownable",
                            "nameLocations": [
                                "348:7:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 147,
                            "src": "348:7:12"
                        },
                        "id": 2936,
                        "nodeType": "InheritanceSpecifier",
                        "src": "348:7:12"
                    }
                ],
                "canonicalName": "Collection",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 3020,
                "linearizedBaseContracts": [
                    3020,
                    147,
                    1293,
                    237,
                    1456,
                    1410,
                    1757,
                    1769,
                    1478
                ],
                "name": "Collection",
                "nameLocation": "326:10:12",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "1b6cde10",
                        "id": 2938,
                        "mutability": "mutable",
                        "name": "cardCount",
                        "nameLocation": "373:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3020,
                        "src": "362:20:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                        },
                        "typeName": {
                            "id": 2937,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "362:3:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "75794a3c",
                        "id": 2940,
                        "mutability": "mutable",
                        "name": "nextTokenId",
                        "nameLocation": "403:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3020,
                        "src": "388:26:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 2939,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "388:7:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "d547cfb7",
                        "id": 2942,
                        "mutability": "mutable",
                        "name": "baseTokenURI",
                        "nameLocation": "434:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 3020,
                        "src": "420:26:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 2941,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "420:6:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 2971,
                            "nodeType": "Block",
                            "src": "701:181:12",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 2961,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 2959,
                                            "name": "cardCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2938,
                                            "src": "753:9:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 2960,
                                            "name": "_cardCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2946,
                                            "src": "765:10:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            }
                                        },
                                        "src": "753:22:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        }
                                    },
                                    "id": 2962,
                                    "nodeType": "ExpressionStatement",
                                    "src": "753:22:12"
                                },
                                {
                                    "expression": {
                                        "id": 2965,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 2963,
                                            "name": "baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2942,
                                            "src": "785:12:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 2964,
                                            "name": "_baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2948,
                                            "src": "800:13:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "785:28:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 2966,
                                    "nodeType": "ExpressionStatement",
                                    "src": "785:28:12"
                                },
                                {
                                    "expression": {
                                        "id": 2969,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 2967,
                                            "name": "nextTokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2940,
                                            "src": "823:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 2968,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "837:1:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "823:15:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 2970,
                                    "nodeType": "ExpressionStatement",
                                    "src": "823:15:12"
                                }
                            ]
                        },
                        "id": 2972,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 2951,
                                        "name": "_collectionName",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2944,
                                        "src": "656:15:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "hexValue": "4e465443",
                                        "id": 2952,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "673:6:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_e242a09f511d03c6edefaa4deb83a83f27d9e0c4e16f1e2e0f151820f632b716",
                                            "typeString": "literal_string \"NFTC\""
                                        },
                                        "value": "NFTC"
                                    }
                                ],
                                "id": 2953,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 2950,
                                    "name": "ERC721",
                                    "nameLocations": [
                                        "649:6:12"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1293,
                                    "src": "649:6:12"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "649:31:12"
                            },
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 2955,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "689:3:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 2956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "693:6:12",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "689:10:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 2957,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 2954,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "681:7:12"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 147,
                                    "src": "681:7:12"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "681:19:12"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2949,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2944,
                                    "mutability": "mutable",
                                    "name": "_collectionName",
                                    "nameLocation": "566:15:12",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2972,
                                    "src": "552:29:12",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 2943,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "552:6:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2946,
                                    "mutability": "mutable",
                                    "name": "_cardCount",
                                    "nameLocation": "595:10:12",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2972,
                                    "src": "591:14:12",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                    },
                                    "typeName": {
                                        "id": 2945,
                                        "name": "int",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "591:3:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2948,
                                    "mutability": "mutable",
                                    "name": "_baseTokenURI",
                                    "nameLocation": "629:13:12",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2972,
                                    "src": "615:27:12",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 2947,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "615:6:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "542:106:12"
                        },
                        "returnParameters": {
                            "id": 2958,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "701:0:12"
                        },
                        "scope": 3020,
                        "src": "531:351:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 2997,
                            "nodeType": "Block",
                            "src": "970:149:12",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 2985,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 2980,
                                                    "name": "nextTokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2940,
                                                    "src": "988:11:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 2983,
                                                            "name": "cardCount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2938,
                                                            "src": "1011:9:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int256",
                                                                "typeString": "int256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_int256",
                                                                "typeString": "int256"
                                                            }
                                                        ],
                                                        "id": 2982,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1003:7:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint256_$",
                                                            "typeString": "type(uint256)"
                                                        },
                                                        "typeName": {
                                                            "id": 2981,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1003:7:12",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 2984,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1003:18:12",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "988:33:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416c6c2063617264732068617665206265656e206d696e7465642e",
                                                "id": 2986,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1023:29:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_3170130d747c1e51ed24a8d900fb7591e185f732664f4ee8808c6882a01e9ea9",
                                                    "typeString": "literal_string \"All cards have been minted.\""
                                                },
                                                "value": "All cards have been minted."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_3170130d747c1e51ed24a8d900fb7591e185f732664f4ee8808c6882a01e9ea9",
                                                    "typeString": "literal_string \"All cards have been minted.\""
                                                }
                                            ],
                                            "id": 2979,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "980:7:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 2987,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "980:73:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2988,
                                    "nodeType": "ExpressionStatement",
                                    "src": "980:73:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 2990,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2974,
                                                "src": "1073:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 2991,
                                                "name": "nextTokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2940,
                                                "src": "1077:11:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 2989,
                                            "name": "_safeMint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                915,
                                                941
                                            ],
                                            "referencedDeclaration": 915,
                                            "src": "1063:9:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 2992,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1063:26:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2993,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1063:26:12"
                                },
                                {
                                    "expression": {
                                        "id": 2995,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "1099:13:12",
                                        "subExpression": {
                                            "id": 2994,
                                            "name": "nextTokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2940,
                                            "src": "1099:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 2996,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1099:13:12"
                                }
                            ]
                        },
                        "functionSelector": "6a627842",
                        "id": 2998,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 2977,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 2976,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "960:9:12"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 58,
                                    "src": "960:9:12"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "960:9:12"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "934:4:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2975,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2974,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "947:2:12",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2998,
                                    "src": "939:10:12",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2973,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "939:7:12",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "938:12:12"
                        },
                        "returnParameters": {
                            "id": 2978,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "970:0:12"
                        },
                        "scope": 3020,
                        "src": "925:194:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "baseFunctions": [
                            480
                        ],
                        "body": {
                            "id": 3018,
                            "nodeType": "Block",
                            "src": "1234:89:12",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 3010,
                                                        "name": "baseTokenURI",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2942,
                                                        "src": "1275:12:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_storage",
                                                            "typeString": "string storage ref"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 3013,
                                                                "name": "tokenId",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 3000,
                                                                "src": "1306:7:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 3011,
                                                                "name": "Strings",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1733,
                                                                "src": "1289:7:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Strings_$1733_$",
                                                                    "typeString": "type(library Strings)"
                                                                }
                                                            },
                                                            "id": 3012,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1297:8:12",
                                                            "memberName": "toString",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1546,
                                                            "src": "1289:16:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (uint256) pure returns (string memory)"
                                                            }
                                                        },
                                                        "id": 3014,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1289:25:12",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_storage",
                                                            "typeString": "string storage ref"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 3008,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "1258:3:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 3009,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1262:12:12",
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1258:16:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 3015,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1258:57:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 3007,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1251:6:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 3006,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1251:6:12",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 3016,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1251:65:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 3005,
                                    "id": 3017,
                                    "nodeType": "Return",
                                    "src": "1244:72:12"
                                }
                            ]
                        },
                        "functionSelector": "c87b56dd",
                        "id": 3019,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "tokenURI",
                        "nameLocation": "1163:8:12",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 3002,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1201:8:12"
                        },
                        "parameters": {
                            "id": 3001,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3000,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "1180:7:12",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3019,
                                    "src": "1172:15:12",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 2999,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1172:7:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1171:17:12"
                        },
                        "returnParameters": {
                            "id": 3005,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3004,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3019,
                                    "src": "1219:13:12",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 3003,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1219:6:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1218:15:12"
                        },
                        "scope": 3020,
                        "src": "1154:169:12",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 3021,
                "src": "317:1008:12",
                "usedErrors": [
                    13,
                    18,
                    195,
                    200,
                    209,
                    214,
                    219,
                    226,
                    231,
                    236
                ],
                "usedEvents": [
                    24,
                    1309,
                    1318,
                    1327
                ]
            }
        ],
        "src": "32:1294:12"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "baseTokenURI()": "d547cfb7",
        "cardCount()": "1b6cde10",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mint(address)": "6a627842",
        "name()": "06fdde03",
        "nextTokenId()": "75794a3c",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "898400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "31146",
            "balanceOf(address)": "2623",
            "baseTokenURI()": "infinite",
            "cardCount()": "2344",
            "getApproved(uint256)": "4625",
            "isApprovedForAll(address,address)": "2969",
            "mint(address)": "infinite",
            "name()": "infinite",
            "nextTokenId()": "2498",
            "owner()": "2544",
            "ownerOf(uint256)": "2572",
            "renounceOwnership()": "28280",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26730",
            "supportsInterface(bytes4)": "322",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "106367",
            "transferOwnership(address)": "28586"
        }
    }
}