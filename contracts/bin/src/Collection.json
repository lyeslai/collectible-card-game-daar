{
    "contractName": "Collection",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_collectionName",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_cardCount",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "_baseTokenURI",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC721IncorrectOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ERC721InsufficientApproval",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidOperator",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC721InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ERC721NonexistentToken",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "baseTokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cardCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "nextTokenId",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_collectionName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_cardCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol\":\"Collection\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395\",\"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4\"]},\"/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol\":{\"keccak256\":\"0x29d7f23fb14c9857509747d441d4d8c5811769784ce648a9807597378794608b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89ed142b432f4a2e4dfe4d0eb28b7c7a7ae9f4275b8db0196f17f2c9d5739b47\",\"dweb:/ipfs/QmPXppxRnxbc1wWzN7AqNgWq7xJqrThS1d88KL44ohEhhh\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714610e045750806306fdde0314610d62578063081812fc14610d26578063095ea7b314610c3c5780631b6cde1014610c1f57806323b872dd14610c0857806342842e0e14610bd95780636352211e14610ba95780636a627842146107c457806370a0823114610773578063715018a61461071857806375794a3c146106fb5780638da5cb5b146106d357806395d89b411461062e578063a22cb46514610593578063b88d4fde146104fe578063c87b56dd146102bb578063d547cfb7146101d9578063e985e9c5146101825763f2fde38b146100f8575f80fd5b3461017e57602036600319011261017e57610111610e93565b610119611144565b6001600160a01b0316801561016b57600680546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017e57604036600319011261017e5761019b610e93565b6101a3610ea9565b9060018060a01b03165f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461017e575f36600319011261017e576040515f6009546101f981610f4b565b80845290600181169081156102975750600114610239575b6102358361022181850382610ef9565b604051918291602083526020830190610e6f565b0390f35b60095f9081527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af939250905b80821061027d57509091508101602001610221610211565b919260018160209254838588010152019101909291610265565b60ff191660208086019190915291151560051b840190910191506102219050610211565b3461017e57602036600319011261017e575f6004358072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110156104db575b806d04ee2d6d415b85acef8100000000600a9210156104c0575b662386f26fc100008110156104ac575b6305f5e10081101561049b575b61271081101561048c575b606481101561047e575b1015610474575b6001820190600a602161036e61035885610f2f565b946103666040519687610ef9565b808652610f2f565b602085019590601f19013687378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530480156103ad57600a909161037f565b5050604051905f906009546103c181610f4b565b906001811690811561045057506001146103f8575b5061023593610221928492518092825e015f815203601f198101835282610ef9565b90915060095f527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5f905b82821061043a5750508201602001906102356103d6565b6001816020925483858901015201910190610423565b60ff19166020808701919091528215159092028501909101925061023590506103d6565b9060010190610343565b60646002910493019261033c565b61271060049104930192610332565b6305f5e10060089104930192610327565b662386f26fc100006010910493019261031a565b6d04ee2d6d415b85acef81000000006020910493019261030a565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81046102f0565b3461017e57608036600319011261017e57610517610e93565b61051f610ea9565b906044356064359267ffffffffffffffff841161017e573660238501121561017e5783600401359261055084610f2f565b9361055e6040519586610ef9565b808552366024828801011161017e576020815f9260246105919901838901378601015261058c838383610f83565b61116b565b005b3461017e57604036600319011261017e576105ac610e93565b6024359081151580920361017e576001600160a01b031690811561061b57335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b3461017e575f36600319011261017e576040515f60015461064e81610f4b565b80845290600181169081156102975750600114610675576102358361022181850382610ef9565b60015f9081527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b8082106106b957509091508101602001610221610211565b9192600181602092548385880101520191019092916106a1565b3461017e575f36600319011261017e576006546040516001600160a01b039091168152602090f35b3461017e575f36600319011261017e576020600854604051908152f35b3461017e575f36600319011261017e57610730611144565b600680546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017e57602036600319011261017e576001600160a01b03610794610e93565b1680156107b1575f526003602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b3461017e57602036600319011261017e576107dd610e93565b6107e5611144565b6008546007548111610b645760408051926108008285610ef9565b600d84526c26b4b73a34b733903a37b5b2b760991b60208501525f80610876845161082b8682610ef9565b6002815261746f60f01b602082015261085e865198631f118ca960e21b60208b0152608060248b015260a48a0190610e6f565b908760448a01526023198983030160648a0152610e6f565b956108998160018060a01b0386169889608483015203601f198101835282610ef9565b6020815191016a636f6e736f6c652e6c6f675afa506020928251916108be8584610ef9565b5f83528515610b51575f82815260028652849020546001600160a01b03168015159081610b20575b875f5260038752855f2060018154019055835f5260028752855f20886bffffffffffffffffffffffff60a01b8254161790558388827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a450610b0d573b6109fe575b50506008549192505f1982146109ea575f926109d6600185940192836008558051936109768286610ef9565b601e85527f546f6b656e206d696e7465642c206e6577206e657874546f6b656e49643a0000848601526109c28251958693632d839cb360e21b8786015260248501526064840190610e6f565b90604483015203601f198101845283610ef9565b815191016a636f6e736f6c652e6c6f675afa005b634e487b7160e01b5f52601160045260245ffd5b610a3791849184519384928392630a85bd0160e11b84523360048501525f60248501526044840152608060648401526084830190610e6f565b03815f885af15f9181610acd575b50610a9657503d15610a8e573d610a67610a5e82610f2f565b92519283610ef9565b81523d5f8383013e5b80519182610a8b5783633250574960e11b5f5260045260245ffd5b01fd5b506060610a70565b919290916001600160e01b03191663757a42ff60e11b01610abb57508190838061094a565b633250574960e11b5f5260045260245ffd5b9091508381813d8311610b06575b610ae58183610ef9565b8101031261017e57516001600160e01b03198116810361017e579085610a45565b503d610adb565b6339e3563760e11b5f525f60045260245ffd5b5f84815260046020526040812080546001600160a01b03191690558181526003885286902080545f190190556108e6565b633250574960e11b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152601b60248201527f416c6c2063617264732068617665206265656e206d696e7465642e00000000006044820152606490fd5b3461017e57602036600319011261017e576020610bc7600435611110565b6040516001600160a01b039091168152f35b3461017e57610591610bea36610ebf565b9060405192610bfa602085610ef9565b5f845261058c838383610f83565b3461017e57610591610c1936610ebf565b91610f83565b3461017e575f36600319011261017e576020600754604051908152f35b3461017e57604036600319011261017e57610c55610e93565b602435610c6181611110565b33151580610d13575b80610ce6575b610cd35781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f90815260046020526040902080546001600160a01b0319166001600160a01b03909216919091179055005b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f90815260056020908152604080832033845290915290205460ff1615610c70565b506001600160a01b038116331415610c6a565b3461017e57602036600319011261017e57600435610d4381611110565b505f526004602052602060018060a01b0360405f205416604051908152f35b3461017e575f36600319011261017e576040515f5f54610d8181610f4b565b80845290600181169081156102975750600114610da8576102358361022181850382610ef9565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b808210610dea57509091508101602001610221610211565b919260018160209254838588010152019101909291610dd2565b3461017e57602036600319011261017e576004359063ffffffff60e01b821680920361017e576020916380ac58cd60e01b8114908115610e5e575b8115610e4d575b5015158152f35b6301ffc9a760e01b14905083610e46565b635b5e139f60e01b81149150610e3f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017e57565b602435906001600160a01b038216820361017e57565b606090600319011261017e576004356001600160a01b038116810361017e57906024356001600160a01b038116810361017e579060443590565b90601f8019910116810190811067ffffffffffffffff821117610f1b57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff8111610f1b57601f01601f191660200190565b90600182811c92168015610f79575b6020831014610f6557565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610f5a565b6001600160a01b0390911691908215610b51575f828152600260205260409020546001600160a01b03169282903315158061107b575b5084611048575b805f52600360205260405f2060018154019055815f52600260205260405f20816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a46001600160a01b031680830361103057505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b5f82815260046020526040902080546001600160a01b0319169055845f52600360205260405f205f198154019055610fc0565b909150806110bf575b156110915782905f610fb9565b82846110a957637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b5033841480156110ee575b8061108457505f838152600460205260409020546001600160a01b03163314611084565b505f84815260056020908152604080832033845290915290205460ff166110ca565b5f818152600260205260409020546001600160a01b0316908115611132575090565b637e27328960e01b5f5260045260245ffd5b6006546001600160a01b0316330361115857565b63118cdaa760e01b5f523360045260245ffd5b9291813b61117a575b50505050565b604051630a85bd0160e11b81523360048201526001600160a01b03948516602482015260448101919091526080606482015292169190602090829081906111c5906084830190610e6f565b03815f865af15f9181611249575b5061122857503d15611221573d6111e981610f2f565b906111f76040519283610ef9565b81523d5f602083013e5b8051908161121c5782633250574960e11b5f5260045260245ffd5b602001fd5b6060611201565b6001600160e01b03191663757a42ff60e11b01610abb57505f808080611174565b9091506020813d602011611286575b8161126560209383610ef9565b8101031261017e57516001600160e01b03198116810361017e57905f6111d3565b3d915061125856fea26469706673582212205e4478da7f9953baf892882111cce1ca9a7511b4439bc9096c008de4b048d27c64736f6c634300081c0033",
    "sourceMap": "423:1117:13:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;423:1117:13;;;;;;;;;-1:-1:-1;;;;;423:1117:13;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;803:10;1273:26:0;1269:95;;3004:6;423:1117:13;;803:10;-1:-1:-1;;;;;;423:1117:13;;;;;;;-1:-1:-1;;;;;423:1117:13;3052:40:0;-1:-1:-1;;3052:40:0;867:22:13;423:1117;;;-1:-1:-1;;;;;423:1117:13;;;;899:28;423:1117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;899:28;423:1117;;;937:15;423:1117;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;899:28;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;899:28;423:1117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:28;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;-1:-1:-1;423:1117:13;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;-1:-1:-1;423:1117:13;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;423:1117:13;;;-1:-1:-1;1322:31:0;423:1117:13;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;-1:-1:-1;423:1117:13;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;-1:-1:-1;;423:1117:13;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;-1:-1:-1;;423:1117:13;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;:::o",
    "deployedSourceMap": "423:1117:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;423:1117:13;2627:22:0;;2623:91;;3004:6;423:1117:13;;-1:-1:-1;;;;;;423:1117:13;;;;;;;-1:-1:-1;;;;;423:1117:13;3052:40:0;-1:-1:-1;;3052:40:0;423:1117:13;2623:91:0;2672:31;;;423:1117:13;2672:31:0;423:1117:13;;;;;2672:31:0;423:1117:13;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;4039:18:2;423:1117:13;;;;;4039:35:2;423:1117:13;;;;;;-1:-1:-1;423:1117:13;;;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;;530:26;423:1117;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;530:26;423:1117;;;;;;;-1:-1:-1;423:1117:13;;;;;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;;;-1:-1:-1;;;12342:17:10;;;12338:103;;423:1117:13;12458:17:10;12467:8;13038:7;12458:17;;;12454:103;;423:1117:13;12583:8:10;12574:17;;;12570:103;;423:1117:13;12699:7:10;12690:16;;;12686:100;;423:1117:13;12812:7:10;12803:16;;;12799:100;;423:1117:13;12925:7:10;12916:16;;;12912:100;;423:1117:13;13029:16:10;;13025:66;;423:1117:13;;;;;13038:7:10;921:76:7;423:1117:13;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;423:1117:13;;;;921:76:7;;;1010:282;-1:-1:-1;;423:1117:13;;-1:-1:-1;;;1115:95:7;;;;423:1117:13;1115:95:7;423:1117:13;1260:10:7;;1256:21;;13038:7:10;1010:282:7;;;;1256:21;1272:5;;423:1117:13;;;;;1490:12;423:1117;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1473:57;423:1117;;;;;;;;;;;;1473:57;423:1117;;1473:57;;;;;;:::i;423:1117::-;;;;1490:12;423:1117;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;1473:57;;;423:1117;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;13025:66:10;423:1117:13;;;13025:66:10;;;12912:100;12925:7;12996:1;423:1117:13;;;;12912:100:10;;;12799;12812:7;423:1117:13;;;;;12799:100:10;;;12686;12699:7;12770:1;423:1117:13;;;;12686:100:10;;;12570:103;12583:8;12656:2;423:1117:13;;;;12570:103:10;;;12454;12467:8;423:1117:13;;;;;12454:103:10;;;12338;-1:-1:-1;423:1117:13;;-1:-1:-1;;;;423:1117:13;;12338:103:10;;423:1117:13;;;;;;-1:-1:-1;;423:1117:13;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5181:4:2;423:1117:13;;;;;;;;;;5121:7:2;;;;;:::i;:::-;5181:4;:::i;:::-;423:1117:13;;;;;;;-1:-1:-1;;423:1117:13;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;423:1117:13;;15698:22:2;;15694:91;;735:10:6;423:1117:13;;15794:18:2;423:1117:13;;;;;;-1:-1:-1;423:1117:13;;;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;15855:41:2;423:1117:13;735:10:6;15855:41:2;;423:1117:13;15694:91:2;15743:31;;;;423:1117:13;15743:31:2;423:1117:13;;;;15743:31:2;423:1117:13;;;;;;-1:-1:-1;;423:1117:13;;;;;;;2597:7:2;423:1117:13;;;;:::i;:::-;;;;;2597:7:2;423:1117:13;;;2597:7:2;;;;423:1117:13;;;;;;;;;;;;;:::i;:::-;2597:7:2;423:1117:13;;;;;;;-1:-1:-1;423:1117:13;;;;;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;;;2597:7:2;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;1710:6:0;423:1117:13;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;498:26;423:1117;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;1500:62:0;;:::i;:::-;3004:6;423:1117:13;;-1:-1:-1;;;;;;423:1117:13;;;;;;;-1:-1:-1;;;;;423:1117:13;3052:40:0;423:1117:13;;3052:40:0;423:1117:13;;;;;;;-1:-1:-1;;423:1117:13;;;;-1:-1:-1;;;;;423:1117:13;;:::i;:::-;;2006:19:2;;2002:87;;423:1117:13;;2105:9:2;423:1117:13;;;;;;;;;;;;;2002:87:2;2048:30;;;423:1117:13;2048:30:2;423:1117:13;;;;;2048:30:2;423:1117:13;;;;;;-1:-1:-1;;423:1117:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;1094:11:13;423:1117;1117:9;423:1117;1094:33;;423:1117;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;423:1117:13;;;;358:279:12;423:1117:13;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;423:1117:13;;;;;;;33482:77:12;;;;423:1117:13;33482:77:12;;;423:1117:13;33482:77:12;;;423:1117:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;33482:77:12;423:1117:13;;;;;;;;;;;;;;33482:77:12;423:1117:13;;33482:77:12;;;;;;:::i;:::-;358:279;;;;;131:42;358:279;;;423:1117:13;;;;;;;;;:::i;:::-;;;;10022:16:2;;10018:87;;423:1117:13;;;;;;;;;;;-1:-1:-1;;;;;423:1117:13;9161:18:2;;;;;9157:256;;423:1117:13;;;;9487:9:2;423:1117:13;;;;;9035:18:2;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;9577:27:2;;;;423:1117:13;9577:27:2;;10180:96;;;17034:14;17030:664;;423:1117:13;-1:-1:-1;;1094:11:13;423:1117;;;-1:-1:-1;;;423:1117:13;;;;358:279:12;423:1117:13;7101:54:12;9035:18:2;423:1117:13;;;;;1094:11;423:1117;;;;;;;;:::i;:::-;;;;;;;;;;;;7101:54:12;;;;;;;;;;33482:77;7101:54;;423:1117:13;;;;;;:::i;:::-;;;;;;7101:54:12;423:1117:13;;7101:54:12;;;;;;:::i;:::-;358:279;;;;131:42;358:279;;423:1117:13;;;;;;;;;;33482:77:12;423:1117:13;;17030:664:2;423:1117:13;;;;;;;;;;;;;;17072:71:2;;735:10:6;423:1117:13;17072:71:2;;423:1117:13;;33482:77:12;423:1117:13;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:2;;423:1117:13;17072:71:2;;;423:1117:13;;17072:71:2;;;17030:664;-1:-1:-1;17068:616:2;;-1:-1:-1;423:1117:13;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;17381:18:2;;;10061:33;;;;423:1117:13;17430:25:2;423:1117:13;;33482:77:12;423:1117:13;17430:25:2;17377:293;17557:95;;423:1117:13;;;;;17068:616:2;423:1117:13;;;;-1:-1:-1;;;;;;423:1117:13;-1:-1:-1;;;17190:51:2;17186:130;;17068:616;17030:664;;;;;;17186:130;10061:33;;;423:1117:13;17272:25:2;423:1117:13;;33482:77:12;423:1117:13;17272:25:2;17072:71;;;;;;;;;;;;;;;;;:::i;:::-;;;423:1117:13;;;;;-1:-1:-1;;;;;;423:1117:13;;;;;;17072:71:2;;;;;;;;;10180:96;10234:31;;;423:1117:13;10234:31:2;423:1117:13;;;33482:77:12;423:1117:13;10234:31:2;9157:256;423:1117:13;;;;15346:15:2;423:1117:13;;;;;;;-1:-1:-1;;;;;;423:1117:13;;;;;;9368:9:2;423:1117:13;;;;;;;-1:-1:-1;;423:1117:13;;;9157:256:2;;10018:87;10061:33;;;423:1117:13;10061:33:2;423:1117:13;;;33482:77:12;423:1117:13;10061:33:2;423:1117:13;;;-1:-1:-1;;;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;2274:22:2;423:1117:13;;2274:22:2;:::i;:::-;423:1117:13;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;5181:4:2;423:1117:13;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;5121:7:2;;;;;:::i;423:1117:13:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;423:1117:13;;;;;468:24;423:1117;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;:::i;:::-;;;14943:22:2;;;:::i;:::-;735:10:6;15093:18:2;;:35;;;423:1117:13;15093:69:2;;;423:1117:13;15089:142:2;;423:1117:13;;-1:-1:-1;;;;;423:1117:13;;;;;15283:28:2;423:1117:13;;15283:28:2;423:1117:13;;;;;;;;;;;;-1:-1:-1;;;;;;423:1117:13;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;15089:142:2;15189:27;;;423:1117:13;15189:27:2;735:10:6;423:1117:13;;;;15189:27:2;15093:69;-1:-1:-1;;;;;;423:1117:13;;;;;;4039:18:2;423:1117:13;;;;;;;;735:10:6;423:1117:13;;;;;;;;;;15132:30:2;15093:69;;:35;-1:-1:-1;;;;;;423:1117:13;;735:10:6;15115:13:2;;15093:35;;423:1117:13;;;;;;-1:-1:-1;;423:1117:13;;;;;;3583:22:2;;;:::i;:::-;;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;-1:-1:-1;423:1117:13;;-1:-1:-1;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;423:1117:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1698:40:2;;;:104;;;;423:1117:13;1698:156:2;;;;423:1117:13;;;;;;;1698:156:2;-1:-1:-1;;;861:40:8;;-1:-1:-1;1698:156:2;;;:104;-1:-1:-1;;;1754:48:2;;;-1:-1:-1;1698:104:2;;423:1117:13;;;;;;;;;;;;;;;;;-1:-1:-1;423:1117:13;;;;;;;;-1:-1:-1;;423:1117:13;;;;:::o;:::-;;;;-1:-1:-1;;;;;423:1117:13;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;423:1117:13;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;423:1117:13;;;;;-1:-1:-1;423:1117:13;;;;;;;;;-1:-1:-1;;423:1117:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;4143:578:2;-1:-1:-1;;;;;423:1117:13;;;;4143:578:2;4237:16;;4233:87;;4251:1;423:1117:13;;;5799:7:2;423:1117:13;;;;;;-1:-1:-1;;;;;423:1117:13;;;;735:10:6;9035:18:2;;;9031:86;;4143:578;9161:18;;9157:256;;4143:578;423:1117:13;4251:1:2;423:1117:13;9487:9:2;423:1117:13;;;4251:1:2;423:1117:13;9427:16:2;423:1117:13;;;;;;4251:1:2;423:1117:13;5799:7:2;423:1117:13;;;4251:1:2;423:1117:13;;;;;;;;;;;9577:27:2;;4251:1;9577:27;;-1:-1:-1;;;;;423:1117:13;4610:21:2;;;4606:109;;4143:578;;;:::o;4606:109::-;4654:50;;;4251:1;4654:50;;423:1117:13;;;;;;4251:1:2;4654:50;9157:256;423:1117:13;;;;15346:15:2;423:1117:13;;;;;;;-1:-1:-1;;;;;;423:1117:13;;;;4251:1:2;423:1117:13;9368:9:2;423:1117:13;;;4251:1:2;423:1117:13;;;;;;;;9157:256:2;;9031:86;6514:127;;-1:-1:-1;6514:127:2;;;9031:86;7193:39;7189:255;;9031:86;;;;;7189:255;7252:19;;423:1117:13;;7298:31:2;;;4251:1;7298:31;;423:1117:13;;4251:1:2;7298:31;7248:186;7375:44;;;4251:1;7375:44;735:10:6;7375:44:2;423:1117:13;;;;4251:1:2;7375:44;6514:127;735:10:6;;6552:16:2;;:52;;;;6514:127;6552:88;6514:127;6552:88;-1:-1:-1;4251:1:2;423:1117:13;;;6034:15:2;423:1117:13;;;;;;-1:-1:-1;;;;;423:1117:13;735:10:6;6608:32:2;6514:127;;6552:52;-1:-1:-1;4251:1:2;423:1117:13;;;4039:18:2;423:1117:13;;;;;;;;735:10:6;423:1117:13;;;;;;;;;;6552:52:2;;16138:241;-1:-1:-1;423:1117:13;;;5799:7:2;423:1117:13;;;;;;-1:-1:-1;;;;;423:1117:13;;16267:19:2;;16263:88;;16360:12;16138:241;:::o;16263:88::-;7298:31;;;-1:-1:-1;16309:31:2;;423:1117:13;;-1:-1:-1;16309:31:2;1796:162:0;1710:6;423:1117:13;-1:-1:-1;;;;;423:1117:13;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:6;1901:40:0;423:1117:13;;-1:-1:-1;1901:40:0;16918:782:2;;;17034:14;;17030:664;;16918:782;;;;;:::o;17030:664::-;423:1117:13;;-1:-1:-1;;;17072:71:2;;735:10:6;17072:71:2;;;423:1117:13;-1:-1:-1;;;;;423:1117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:2;;17051:1;17072:71;;;17051:1;;17072:71;;;17030:664;-1:-1:-1;17068:616:2;;-1:-1:-1;423:1117:13;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;17051:1:2;423:1117:13;;;;;;;;17381:18:2;;;10061:33;;;;17051:1;17430:25;17072:71;423:1117:13;;17051:1:2;17430:25;17377:293;423:1117:13;17557:95:2;;423:1117:13;;;;17068:616:2;-1:-1:-1;;;;;;423:1117:13;-1:-1:-1;;;17190:51:2;17186:130;;17068:616;17030:664;;;;;;17072:71;;;;423:1117:13;17072:71:2;;423:1117:13;17072:71:2;;;;;;423:1117:13;17072:71:2;;;:::i;:::-;;;423:1117:13;;;;;-1:-1:-1;;;;;;423:1117:13;;;;;;17072:71:2;;;;;;;-1:-1:-1;17072:71:2;",
    "sourcePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.28+commit.7893614a"
    },
    "ast": {
        "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/src/Collection.sol",
        "exportedSymbols": {
            "Collection": [
                11122
            ],
            "Context": [
                1478
            ],
            "ERC165": [
                1757
            ],
            "ERC721": [
                1293
            ],
            "IERC165": [
                1769
            ],
            "IERC721": [
                1410
            ],
            "IERC721Errors": [
                237
            ],
            "IERC721Metadata": [
                1456
            ],
            "IERC721Receiver": [
                1428
            ],
            "Ownable": [
                147
            ],
            "Strings": [
                1733
            ],
            "console": [
                11013
            ]
        },
        "id": 11123,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 11015,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:13"
            },
            {
                "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 11016,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 11123,
                "sourceUnit": 1294,
                "src": "57:131:13",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 11017,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 11123,
                "sourceUnit": 148,
                "src": "189:126:13",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/hardhat/console.sol",
                "file": "/home/lyeslai/Documents/collectible-card-game-daar/contracts/node_modules/hardhat/console.sol",
                "id": 11018,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 11123,
                "sourceUnit": 11014,
                "src": "316:103:13",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 11019,
                            "name": "ERC721",
                            "nameLocations": [
                                "446:6:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1293,
                            "src": "446:6:13"
                        },
                        "id": 11020,
                        "nodeType": "InheritanceSpecifier",
                        "src": "446:6:13"
                    },
                    {
                        "baseName": {
                            "id": 11021,
                            "name": "Ownable",
                            "nameLocations": [
                                "454:7:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 147,
                            "src": "454:7:13"
                        },
                        "id": 11022,
                        "nodeType": "InheritanceSpecifier",
                        "src": "454:7:13"
                    }
                ],
                "canonicalName": "Collection",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 11122,
                "internalFunctionIDs": {
                    "2944": 1
                },
                "linearizedBaseContracts": [
                    11122,
                    147,
                    1293,
                    237,
                    1456,
                    1410,
                    1757,
                    1769,
                    1478
                ],
                "name": "Collection",
                "nameLocation": "432:10:13",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "1b6cde10",
                        "id": 11024,
                        "mutability": "mutable",
                        "name": "cardCount",
                        "nameLocation": "483:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 11122,
                        "src": "468:24:13",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 11023,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "468:7:13",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "75794a3c",
                        "id": 11026,
                        "mutability": "mutable",
                        "name": "nextTokenId",
                        "nameLocation": "513:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 11122,
                        "src": "498:26:13",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 11025,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "498:7:13",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "d547cfb7",
                        "id": 11028,
                        "mutability": "mutable",
                        "name": "baseTokenURI",
                        "nameLocation": "544:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 11122,
                        "src": "530:26:13",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 11027,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "530:6:13",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 11057,
                            "nodeType": "Block",
                            "src": "815:181:13",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 11047,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 11045,
                                            "name": "cardCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11024,
                                            "src": "867:9:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 11046,
                                            "name": "_cardCount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11032,
                                            "src": "879:10:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "867:22:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 11048,
                                    "nodeType": "ExpressionStatement",
                                    "src": "867:22:13"
                                },
                                {
                                    "expression": {
                                        "id": 11051,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 11049,
                                            "name": "baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11028,
                                            "src": "899:12:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 11050,
                                            "name": "_baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11034,
                                            "src": "914:13:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "899:28:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 11052,
                                    "nodeType": "ExpressionStatement",
                                    "src": "899:28:13"
                                },
                                {
                                    "expression": {
                                        "id": 11055,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 11053,
                                            "name": "nextTokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11026,
                                            "src": "937:11:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 11054,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "951:1:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "937:15:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 11056,
                                    "nodeType": "ExpressionStatement",
                                    "src": "937:15:13"
                                }
                            ]
                        },
                        "id": 11058,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 11037,
                                        "name": "_collectionName",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11030,
                                        "src": "770:15:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "hexValue": "4e465443",
                                        "id": 11038,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "787:6:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_e242a09f511d03c6edefaa4deb83a83f27d9e0c4e16f1e2e0f151820f632b716",
                                            "typeString": "literal_string \"NFTC\""
                                        },
                                        "value": "NFTC"
                                    }
                                ],
                                "id": 11039,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 11036,
                                    "name": "ERC721",
                                    "nameLocations": [
                                        "763:6:13"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1293,
                                    "src": "763:6:13"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "763:31:13"
                            },
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 11041,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "803:3:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 11042,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "807:6:13",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "803:10:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 11043,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 11040,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "795:7:13"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 147,
                                    "src": "795:7:13"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "795:19:13"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 11035,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 11030,
                                    "mutability": "mutable",
                                    "name": "_collectionName",
                                    "nameLocation": "676:15:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11058,
                                    "src": "662:29:13",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 11029,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "662:6:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 11032,
                                    "mutability": "mutable",
                                    "name": "_cardCount",
                                    "nameLocation": "709:10:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11058,
                                    "src": "701:18:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 11031,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "701:7:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 11034,
                                    "mutability": "mutable",
                                    "name": "_baseTokenURI",
                                    "nameLocation": "743:13:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11058,
                                    "src": "729:27:13",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 11033,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "729:6:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "652:110:13"
                        },
                        "returnParameters": {
                            "id": 11044,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "815:0:13"
                        },
                        "scope": 11122,
                        "src": "641:355:13",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 11099,
                            "nodeType": "Block",
                            "src": "1080:254:13",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 11071,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 11066,
                                                    "name": "nextTokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11026,
                                                    "src": "1094:11:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 11069,
                                                            "name": "cardCount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 11024,
                                                            "src": "1117:9:13",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 11068,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1109:7:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_uint256_$",
                                                            "typeString": "type(uint256)"
                                                        },
                                                        "typeName": {
                                                            "id": 11067,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1109:7:13",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 11070,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1109:18:13",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1094:33:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416c6c2063617264732068617665206265656e206d696e7465642e",
                                                "id": 11072,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1129:29:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_3170130d747c1e51ed24a8d900fb7591e185f732664f4ee8808c6882a01e9ea9",
                                                    "typeString": "literal_string \"All cards have been minted.\""
                                                },
                                                "value": "All cards have been minted."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_3170130d747c1e51ed24a8d900fb7591e185f732664f4ee8808c6882a01e9ea9",
                                                    "typeString": "literal_string \"All cards have been minted.\""
                                                }
                                            ],
                                            "id": 11065,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1086:7:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 11073,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1086:73:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 11074,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1086:73:13"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4d696e74696e6720746f6b656e",
                                                "id": 11078,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1177:15:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_e2750dab65f4e03051343b1ff13974d1ce73f8bdc9433db96968434a75846a60",
                                                    "typeString": "literal_string \"Minting token\""
                                                },
                                                "value": "Minting token"
                                            },
                                            {
                                                "id": 11079,
                                                "name": "nextTokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11026,
                                                "src": "1194:11:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "hexValue": "746f",
                                                "id": 11080,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1207:4:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                                                    "typeString": "literal_string \"to\""
                                                },
                                                "value": "to"
                                            },
                                            {
                                                "id": 11081,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11060,
                                                "src": "1213:2:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_e2750dab65f4e03051343b1ff13974d1ce73f8bdc9433db96968434a75846a60",
                                                    "typeString": "literal_string \"Minting token\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                                                    "typeString": "literal_string \"to\""
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 11075,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11013,
                                                "src": "1165:7:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$11013_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 11077,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1173:3:13",
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6780,
                                            "src": "1165:11:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
                                                "typeString": "function (string memory,uint256,string memory,address) pure"
                                            }
                                        },
                                        "id": 11082,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1165:51:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 11083,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1165:51:13"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 11085,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11060,
                                                "src": "1232:2:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 11086,
                                                "name": "nextTokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11026,
                                                "src": "1236:11:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 11084,
                                            "name": "_safeMint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                915,
                                                941
                                            ],
                                            "referencedDeclaration": 915,
                                            "src": "1222:9:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 11087,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1222:26:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 11088,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1222:26:13"
                                },
                                {
                                    "expression": {
                                        "id": 11090,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "1254:13:13",
                                        "subExpression": {
                                            "id": 11089,
                                            "name": "nextTokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11026,
                                            "src": "1254:11:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 11091,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1254:13:13"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "546f6b656e206d696e7465642c206e6577206e657874546f6b656e49643a",
                                                "id": 11095,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1285:32:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2281d72d2f423a7e56b6ec32e532c197358e01b1cbb07ab7b81edcc984ae7430",
                                                    "typeString": "literal_string \"Token minted, new nextTokenId:\""
                                                },
                                                "value": "Token minted, new nextTokenId:"
                                            },
                                            {
                                                "id": 11096,
                                                "name": "nextTokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11026,
                                                "src": "1319:11:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_2281d72d2f423a7e56b6ec32e532c197358e01b1cbb07ab7b81edcc984ae7430",
                                                    "typeString": "literal_string \"Token minted, new nextTokenId:\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 11092,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11013,
                                                "src": "1273:7:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$11013_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 11094,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1281:3:13",
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3657,
                                            "src": "1273:11:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (string memory,uint256) pure"
                                            }
                                        },
                                        "id": 11097,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1273:58:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 11098,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1273:58:13"
                                }
                            ]
                        },
                        "functionSelector": "6a627842",
                        "id": 11100,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 11063,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 11062,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1070:9:13"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 58,
                                    "src": "1070:9:13"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1070:9:13"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "1044:4:13",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 11061,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 11060,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1057:2:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11100,
                                    "src": "1049:10:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 11059,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1049:7:13",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1048:12:13"
                        },
                        "returnParameters": {
                            "id": 11064,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1080:0:13"
                        },
                        "scope": 11122,
                        "src": "1035:299:13",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "baseFunctions": [
                            480
                        ],
                        "body": {
                            "id": 11120,
                            "nodeType": "Block",
                            "src": "1449:89:13",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 11112,
                                                        "name": "baseTokenURI",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11028,
                                                        "src": "1490:12:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_storage",
                                                            "typeString": "string storage ref"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 11115,
                                                                "name": "tokenId",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11102,
                                                                "src": "1521:7:13",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 11113,
                                                                "name": "Strings",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1733,
                                                                "src": "1504:7:13",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Strings_$1733_$",
                                                                    "typeString": "type(library Strings)"
                                                                }
                                                            },
                                                            "id": 11114,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1512:8:13",
                                                            "memberName": "toString",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1546,
                                                            "src": "1504:16:13",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (uint256) pure returns (string memory)"
                                                            }
                                                        },
                                                        "id": 11116,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1504:25:13",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_storage",
                                                            "typeString": "string storage ref"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 11110,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "1473:3:13",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 11111,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1477:12:13",
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1473:16:13",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 11117,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1473:57:13",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 11109,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1466:6:13",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 11108,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1466:6:13",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 11118,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1466:65:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 11107,
                                    "id": 11119,
                                    "nodeType": "Return",
                                    "src": "1459:72:13"
                                }
                            ]
                        },
                        "functionSelector": "c87b56dd",
                        "id": 11121,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "tokenURI",
                        "nameLocation": "1378:8:13",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 11104,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1416:8:13"
                        },
                        "parameters": {
                            "id": 11103,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 11102,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "1395:7:13",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11121,
                                    "src": "1387:15:13",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 11101,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1387:7:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1386:17:13"
                        },
                        "returnParameters": {
                            "id": 11107,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 11106,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 11121,
                                    "src": "1434:13:13",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 11105,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1434:6:13",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1433:15:13"
                        },
                        "scope": 11122,
                        "src": "1369:169:13",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 11123,
                "src": "423:1117:13",
                "usedErrors": [
                    13,
                    18,
                    195,
                    200,
                    209,
                    214,
                    219,
                    226,
                    231,
                    236
                ],
                "usedEvents": [
                    24,
                    1309,
                    1318,
                    1327
                ]
            }
        ],
        "src": "32:1509:13"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "baseTokenURI()": "d547cfb7",
        "cardCount()": "1b6cde10",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mint(address)": "6a627842",
        "name()": "06fdde03",
        "nextTokenId()": "75794a3c",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "960800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "31146",
            "balanceOf(address)": "2623",
            "baseTokenURI()": "infinite",
            "cardCount()": "2344",
            "getApproved(uint256)": "4625",
            "isApprovedForAll(address,address)": "2969",
            "mint(address)": "infinite",
            "name()": "infinite",
            "nextTokenId()": "2498",
            "owner()": "2544",
            "ownerOf(uint256)": "2572",
            "renounceOwnership()": "28280",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26730",
            "supportsInterface(bytes4)": "322",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "106367",
            "transferOwnership(address)": "28586"
        }
    }
}